akka {
  actor {
    provider = "cluster"
  }
  cluster {
    # Each node should be assigned this number using an system property setting. In turn, each node will instantiate
    # a node-singleton actor of the same name to subscribe to events and publish them to the event stream.
    roles = ["eventSubscriber1"]
  }
}

cassandra-journal.contact-points = ["172.17.0.8:9042"]
cassandra-snapshot-store.contact-points = ["172.17.0.8:9042"]
cassandra-journal.port = 0
akka.persistence.journal.plugin = "cassandra-journal"
akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

cinnamon.prometheus {
  exporters += http-server

  http-server {
    host = "0.0.0.0"
    port = 9091
  }
}

cinnamon.application = "akka-saga"

cinnamon.akka {
  actors {
      "/user/*" {
      report-by = class
    }
  }
}

cinnamon.chmetrics {
  reporters += "console-reporter"
}

akka-saga {
  bank-account {
    shard-count = 3
    saga {
      shard-count = 3
      retry-after = 1 minute
      keep-alive-after-completion = 5 minutes
    }
  }
  # this must have a corresponding and matching role in place and it must be unique per node.
  event-subscriber {
    unique-name = "eventSubscriber1"
    timeout-subscription-after = 10.minutes
  }
}
